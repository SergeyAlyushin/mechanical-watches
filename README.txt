Часы с шаговыми двигателями на Arduino, автор Луук Эссельбрюгге из Нидерландов, напечатанные на 3D-принтере.
Это мой вариант, немного переработанный.
------------------------------------------------------------------------- 

Компоненты:
4 микросхемы SMD 74HC595
4 микросхемы SMD ULN2003  
4 светодиода WS2812B 
1 плата Arduino Nano
1 модуль GPS NEO 6M (покупайте с большой антенной, иначе будете бегать по квартире в поисках спутника)
4 шаговых двигателя 28BYJ-48 на 5V без драйверов
4 резистора SMD 1kOm
2 резистора 0,125Вт 1кОм
1 резистор 0,125Вт 330 Ом
2 светодиода для точек, любого типа, по цвету совпадающие с подсветкой
3 тактовых кнопки DIP
4 концевых выключателя MK7
1 микровыключатель питания
4 разъема ХН2.54 на 5 контактов (папа)
4 разъема ХН2.54 на 4 контакта (папа + мама)
4 разъема ХН2.54 на 3 контакта (папа + мама)
4 разъема ХН2.54 на 2 контакта (папа + мама)
1 блок питания на 5V 3А
16 шурупов 2х10 с полукруглой головкой (для крепления мотора и платы)
24 шурупа 2х10 с головкой в потай (для крепления передних и задних крышек)
12 шурупов 1,8х5 (для крепления модулей)
8 шайб 2х5 (для крепления моторов)
---------------------------------------------------------------------------


Все детали корпуса напечатанны пластиком ABS (его легче склеивать) на 3Д принтере. Четыре корпуса Body 1-4 и корпус Body point печатались с применением поддержек.
 
4 корпуса (Body_1, Body_2, Body_3, Body_4)
4 крышки корпуса (Bracket)
4 рамки крышки корпуса (Ramka_Bracket)
1 корпус точек (Body_Point)
1 крышка корпуса точек (Lid_Body_point)
1 светофильтр крышки корпуса точек (Filter_point), печать пластиком SBS  
3 пластины (Plate1) 
2 пластины (Plate2)
1 пластина (Plate3)
1 пластина (Plate4)
3 пластинчатых соединителя (Plate_connector)
29 светофильтров пластин (Window), печать пластиком SBS 
4 шестерни шаговых моторов (Gear)
1 половина основания (Top_base_left)
1 половина основания (Top_base_Right)
1 половина задней панели основания (Bottom_base_left)
1 половина задней панели основания (Bottom_base_Right)
1 пластина соединителя задней панели (Pad_Bottom base)
1 крепление антенны GPS (Antenna)
1 крепление модуля GPS (Module GPS)
1 крепление платы Arduino (Arduino)
1 крепление тактовых кнопок (Buttoms)
----------------------------------------------------------------------------
Печатные платы драйверов изготовлены из стеклотекстолита толщиной 1мм, толще не влезут в корпус. Макет платы нарисован в программе Sprint Layout версии 6.0
Принципиальная схема часов приложена.
----------------------------------------------------------------------------
Скетч полностью работоспособен.
У автора были некоторые неточности, поэтому я внес исправления и позволю себе дать некоторые пояснения для новичков.
В версии Arduino 1.8.1 компиляция проходит без проблем.
-----------------------------------------------------------------------------
Перед загрузкой скетча, проверить, что все ниже перечисленные библиотеки у вас добавлены (они должны быть красного цвета): 
#include <FastLED.h>
#include <SoftwareSerial.h> 
#include <OneWire.h> 
#include <DallasTemperature.h>
Если библиотека черного цвета, то необходимо ее добавить в среду Arduino
-----------------------------------------------------------------------------
В комментариях ниже перечисленных строк:  
int SER_Pin = 12;   //pin 14 on the 75HC595
int RCLK_Pin = 11;  //pin 12 on the 75HC595
int SRCLK_Pin = 10; //pin 11 on the 75HC595
не правильно указана серия микросхемы, правильно - 74НС595
-----------------------------------------------------------------------------
В комментариях строки: 
int RX_GPS = 5; //RX pin on GPS module
не правильно указан контакт подключения модуля GPS, правильно подключать к контакту ТХ.
-----------------------------------------------------------------------------
При необходимости, можно изменить цвет подсветки.
Для дневного режима в строке:
int NightColor[] = {48, 255, 0};
можно поиграться со значениями {48-красный, 255-зеленый, 0-синий}
Для ночного режима в строке:
int DayColor[] = {255, 255, 255};
(этот режим я не использовал, поэтому контакт Arduino А5  я подтянул к GND через резистор 10кОм.)
-----------------------------------------------------------------------------
В зависимости от региона Вашего проживания, возможно будет необходимо подправить значение в строке:
timezoneOffset = 2;
Цифра 2 означает, что к текущему времени GPS будет прибавлено 2 часа.

Для активизации коррекции, вам необходимо нажав и удерживая кнопку "Mode" включить питание часов. Отпустить кнопку только после окончания калибровки. 
